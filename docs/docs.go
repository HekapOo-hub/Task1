// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/human/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to create new human",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "human"
                ],
                "summary": "create human",
                "parameters": [
                    {
                        "description": "create human info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateHumanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/human/delete/{name}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to delete human",
                "tags": [
                    "human"
                ],
                "summary": "delete human info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete human info",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/human/get/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to get human info",
                "tags": [
                    "human"
                ],
                "summary": "get human info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get human info",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/human/update": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to update human",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "human"
                ],
                "summary": "update human",
                "parameters": [
                    {
                        "description": "update human info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateHumanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/refresh/logOut": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "logged out to delete refresh token from db",
                "tags": [
                    "auth"
                ],
                "summary": "logOut",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/refresh/update": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "for getting new refresh and access token by old refresh token",
                "tags": [
                    "auth"
                ],
                "summary": "refresh token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/signIn": {
            "get": {
                "description": "to sign in by login and password",
                "tags": [
                    "auth"
                ],
                "summary": "SignIn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sign in info",
                        "name": "login",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sign in info",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to create new user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "create user info",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/user/delete/{login}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to delete user",
                "tags": [
                    "user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete user info",
                        "name": "login",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/user/file/download/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to download file from filesystem",
                "tags": [
                    "file"
                ],
                "summary": "download file from filesystem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/user/file/upload/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to upload file from local variable which was previously downloaded",
                "tags": [
                    "file"
                ],
                "summary": "upload file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/user/get/{login}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to get user",
                "tags": [
                    "user"
                ],
                "summary": "get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get user info",
                        "name": "login",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "to update user info",
                "tags": [
                    "user"
                ],
                "summary": "update user info",
                "parameters": [
                    {
                        "description": "update user info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CreateHumanRequest": {
            "type": "object",
            "required": [
                "age",
                "name"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "male": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 40
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "required": [
                "login",
                "password",
                "re_password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "re_password": {
                    "type": "string"
                }
            }
        },
        "request.UpdateHumanRequest": {
            "type": "object",
            "required": [
                "age",
                "name",
                "oldName"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "male": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 40
                },
                "oldName": {
                    "type": "string"
                }
            }
        },
        "request.UpdateUserRequest": {
            "type": "object",
            "required": [
                "newLogin",
                "oldLogin",
                "password"
            ],
            "properties": {
                "newLogin": {
                    "type": "string"
                },
                "oldLogin": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1323",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Human CRUD API",
	Description:      "Human CRUD API with authorization and cache",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
